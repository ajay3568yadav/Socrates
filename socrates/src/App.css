/* App.css - Updated with sidebar toggle support */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --code-panel-width: 50%;
  --sidebar-width: 288px;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  background: #111111;
  color: white;
  height: 100vh;
  overflow: hidden;
}

.app-container {
  display: flex;
  height: 100vh;
  background: #111111;
  transition: all 0.3s ease;
}

/* Main Content Layout */
.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: #111111;
  transition: all 0.3s ease;
  min-width: 0;
  position: relative;
}

/* Sidebar hidden adjustments for desktop */
@media (min-width: 769px) {
  .app-container:has(.sidebar.desktop-hidden) .main-content {
    margin-left: 0;
  }
  
  .app-container:has(.sidebar.desktop-visible) .main-content {
    margin-left: 0;
  }
}

/* Mobile Overlay */
.mobile-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 140;
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.mobile-overlay.show {
  display: block;
  opacity: 1;
}

/* Only show overlay on mobile devices */
@media (max-width: 768px) {
  .mobile-overlay.show {
    display: block;
    opacity: 1;
  }
}

/* Hide overlay on desktop */
@media (min-width: 769px) {
  .mobile-overlay {
    display: none !important;
  }
}

/* Layout adjustments for code panel */
.app-container.code-panel-open .main-content {
  width: calc(100% - var(--code-panel-width));
}

@media (max-width: 768px) {
  .app-container.code-panel-open .main-content {
    width: 100%;
  }
}

/* Scrollbar Styling */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: #333333;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: #444444;
}

/* Smooth transitions for all layout changes */
* {
  transition: width 0.3s ease, transform 0.3s ease, margin 0.3s ease;
}

/* Prevent text selection during resize */
body.resizing {
  user-select: none;
  cursor: col-resize;
}

/* Focus states for accessibility */
button:focus,
input:focus,
textarea:focus {
  outline: 2px solid #22c55e;
  outline-offset: 2px;
}

/* Ensure proper z-index stacking */
.sidebar {
  z-index: 100;
}

.mobile-overlay {
  z-index: 140;
}

.code-panel-overlay {
  z-index: 1000;
}

/* Animation classes */
@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideOutLeft {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

.sidebar.animating-in {
  animation: slideInLeft 0.3s ease-out;
}

.sidebar.animating-out {
  animation: slideOutLeft 0.3s ease-out;
}

/* Add these styles to your existing App.css */

:root {
  --code-panel-width: 50%;
  --sidebar-width: 288px;
  --collapsed-sidebar-width: 64px; /* Add this new variable */
}

/* Update the main content adjustments for collapsed sidebar */
@media (min-width: 769px) {
  .app-container:has(.sidebar.desktop-hidden) .main-content {
    margin-left: 0;
  }
  
  .app-container:has(.sidebar.desktop-visible) .main-content {
    margin-left: 0;
  }
  
  /* New: Adjust main content when sidebar is collapsed */
  .app-container:has(.sidebar.desktop-visible.collapsed) .main-content {
    margin-left: 0;
    padding-left: 0;
  }
}

/* Add transition for smooth layout changes */
.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: #111111;
  transition: all 0.3s ease, margin-left 0.3s ease, padding-left 0.3s ease;
  min-width: 0;
  position: relative;
}

/* Ensure the app container handles the sidebar state changes */
.app-container {
  display: flex;
  height: 100vh;
  background: #111111;
  transition: all 0.3s ease;
  position: relative;
}

/* Layout adjustments for code panel with collapsed sidebar */
.app-container.code-panel-open .main-content {
  width: calc(100% - var(--code-panel-width));
}

/* When sidebar is collapsed, the main content should start from the collapsed width */
.app-container:has(.sidebar.collapsed) .main-content {
  margin-left: 0; /* Reset margin as sidebar position is fixed */
}

@media (max-width: 768px) {
  .app-container.code-panel-open .main-content {
    width: 100%;
  }
  
  /* On mobile, ignore collapsed state */
  .app-container:has(.sidebar.collapsed) .main-content {
    margin-left: 0;
  }
}

/* Smooth transitions for all layout changes including collapse */
* {
  transition: width 0.3s ease, transform 0.3s ease, margin 0.3s ease, padding 0.3s ease;
}

/* Additional improvements for the collapsed state transition */
.sidebar {
  transition: width 0.3s ease, transform 0.3s ease, margin-left 0.3s ease;
}

/* Ensure proper z-index stacking with collapsed sidebar */
.sidebar {
  z-index: 100;
}

.sidebar.collapsed {
  z-index: 100;
}

.mobile-overlay {
  z-index: 140;
}

.code-panel-overlay {
  z-index: 1000;
}

/* Animation classes for collapse/expand */
@keyframes collapseIn {
  from {
    width: 288px;
  }
  to {
    width: 64px;
  }
}

@keyframes expandOut {
  from {
    width: 64px;
  }
  to {
    width: 288px;
  }
}

.sidebar.collapsing {
  animation: collapseIn 0.3s ease-out forwards;
}

.sidebar.expanding {
  animation: expandOut 0.3s ease-out forwards;
}